{"ast":null,"code":"import _classCallCheck from \"/Users/Sunny/Code/Sentimental-Reddit/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Sunny/Code/Sentimental-Reddit/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Sunny/Code/Sentimental-Reddit/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Sunny/Code/Sentimental-Reddit/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Sunny/Code/Sentimental-Reddit/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Sunny/Code/Sentimental-Reddit/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Sunny/Code/Sentimental-Reddit/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Jumbotron } from \"react-bootstrap\";\nimport Analysis from \"./Analysis\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      url: \"\",\n      showAnalysis: false,\n      value: \"\"\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleURLSubmit = _this.handleURLSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleResetSubmit = _this.handleResetSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"handleURLSubmit\",\n    value: function handleURLSubmit(event) {\n      event.preventDefault(); // alert('A name was submitted: ' + this.state.value);\n\n      this.setState({\n        showAnalysis: true,\n        url: this.state.value\n      });\n    }\n  }, {\n    key: \"handleResetSubmit\",\n    value: function handleResetSubmit(event) {\n      event.preventDefault();\n      this.setState({\n        url: \"\",\n        showAnalysis: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"App-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Welcome to Reddit Sentiment!\")), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"App-intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleURLSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Please Enter a Subreddit URL:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        onSubmit: this.handleURLSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })))), this.state.showAnalysis ? React.createElement(Analysis, {\n        url: this.state.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }) : null, React.createElement(\"form\", {\n        onSubmit: this.handleResetSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Reset Data\",\n        onSubmit: this.handleResetSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Sunny/Code/Sentimental-Reddit/client/src/App.js"],"names":["React","Component","Jumbotron","Analysis","App","props","state","url","showAnalysis","value","handleChange","bind","handleURLSubmit","handleResetSubmit","event","setState","target","preventDefault"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,EADM;AAEXC,MAAAA,YAAY,EAAE,KAFH;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAMA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBD,IAArB,uDAAvB;AACA,UAAKE,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBF,IAAvB,uDAAzB;AAViB;AAWlB;;;;iCAEYG,K,EAAO;AAClB,WAAKC,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAEK,KAAK,CAACE,MAAN,CAAaP;AAAtB,OAAd;AACD;;;oCAEeK,K,EAAO;AACrBA,MAAAA,KAAK,CAACG,cAAN,GADqB,CAErB;;AACA,WAAKF,QAAL,CAAc;AACZP,QAAAA,YAAY,EAAE,IADF;AAEZD,QAAAA,GAAG,EAAE,KAAKD,KAAL,CAAWG;AAFJ,OAAd;AAID;;;sCAEiBK,K,EAAO;AACvBA,MAAAA,KAAK,CAACG,cAAN;AACA,WAAKF,QAAL,CAAc;AACZR,QAAAA,GAAG,EAAE,EADO;AAEZC,QAAAA,YAAY,EAAE;AAFF,OAAd;AAID;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,CADF,EAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKI,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWG,KAFpB;AAGE,QAAA,QAAQ,EAAE,KAAKC,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EASE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,QAAQ,EAAE,KAAKE,eAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF,CADF,CAJF,EAwBG,KAAKN,KAAL,CAAWE,YAAX,GAA0B,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B,GAA8D,IAxBjE,EAyBE;AAAM,QAAA,QAAQ,EAAE,KAAKM,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,YAFR;AAGE,QAAA,QAAQ,EAAE,KAAKA,iBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAzBF,CADF;AAmCD;;;;EAvEeZ,S;;AA0ElB,eAAeG,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Jumbotron } from \"react-bootstrap\";\nimport Analysis from \"./Analysis\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: \"\",\n      showAnalysis: false,\n      value: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleURLSubmit = this.handleURLSubmit.bind(this);\n    this.handleResetSubmit = this.handleResetSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleURLSubmit(event) {\n    event.preventDefault();\n    // alert('A name was submitted: ' + this.state.value);\n    this.setState({\n      showAnalysis: true,\n      url: this.state.value\n    });\n  }\n\n  handleResetSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      url: \"\",\n      showAnalysis: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Welcome to Reddit Sentiment!</h1>\n        </header>\n        <Jumbotron>\n          <h2 className=\"App-intro\">\n            <form onSubmit={this.handleURLSubmit}>\n              <label>\n                Please Enter a Subreddit URL:\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.handleChange}\n                />\n              </label>\n              <input\n                type=\"submit\"\n                value=\"Submit\"\n                onSubmit={this.handleURLSubmit}\n              />\n            </form>\n          </h2>\n        </Jumbotron>\n\n        {this.state.showAnalysis ? <Analysis url={this.state.url} /> : null}\n        <form onSubmit={this.handleResetSubmit}>\n          <input\n            type=\"submit\"\n            value=\"Reset Data\"\n            onSubmit={this.handleResetSubmit}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}